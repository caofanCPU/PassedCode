#include <stdio.h>       //printf函数的头文件声明,还包括一些基本函数的声明     
#include <stdlib.h>      //system函数的头文件声明
#define P  500           //这是一个宏定义，指的是程序所有的 P 这个符号的值为500,用在此处是方便程序的更改,牵一发而动全身
#define Tn 100000        //同上,在此程序中P代表一个正整数最多能有的因子个数,Tn用来限定正整数的范围
int main()
{
	int i,j,m,s,k1,k2=0; //i,j为循环计数变量,m为余数保存变量,s为因子求和保存变量,k1为因子个数计数变量,k2为完数个数计数变量
	int Yn[P]={0},Sn[Tn]={0};        //Yn[p]为因子数值保存数组,Sn[Tn]为完数数值保存数组
	for(i=1;i<Tn;i++)                //对给定范围内的正整数逐一判断
	{
		k1=0;                        //标记i的因子总数,初始化为0
		for(j=1;j<=(i/2+1);j++)      //一个正整数的最大因数绝对<=该数的一半+1
		{
			m=i%j;                   //对于正整数i,保留i整除j的余数,余数为0,说明此时的j是此时的i的一个因子
			if(m==0)                 //判断余数是否为0
			{                        //条件满足就要用因子数值保存数组保存该因子
				Yn[k1]=j;            //保存i的因子,便于求和
				k1++;                //每保存一个因子,就要为保存下一个因子做准备
			}
		}
		s=0;                         //每次求和前都要将s置零,不然就出错！！！
		for(j=0;j<k1;j++)            //对正整数i的所有因子求和
		{
			s+=Yn[j];                //对i的因子求和,结果保存在变量s中
		}

		//如果发现是完数就要立即输出该完数和其因子
		if(s==i)                     //判断因子求和的结果是否等于该数i
		{                            //条件满足说明该数是完数,就要用完数数值保存数组保存该完数
			Sn[k2]=i;                //保存完数
			k2++;                    //没保存一个完数为保存下一个完数做准备

		printf("完数%d=%4d 其因子为:",k2,Sn[k2-1]);
		for(j=0;j<k1;j++)
		{
			printf("%4d ,",Yn[j]);
		}
		printf("\n");
		}
		//接下来判断下一个正整数i+1,直到打破最大数限制条件结束所有循环
	}
	printf("因此在1到%d(不包括%d)正整数中,完数一共有%d个,其数值和因子如上所示\n",Tn,Tn,k2);   //总结
	system("pause");      //暂停输出结果界面
	return 0;             //main函数返回,程序结束,退出exe
}
