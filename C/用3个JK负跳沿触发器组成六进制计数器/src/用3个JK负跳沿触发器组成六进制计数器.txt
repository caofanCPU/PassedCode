//数电实验"JK触发器和门电路组成六进制计数器"程序模拟
//说明:本程序模拟计数器全部功能,使用程序中标号①②③使得计数器从0-0开始输出,整个程序基于在脉冲信号CLK有效作用下
//        JK触发器输出端原变量值的情况来模拟:1.数码管显示:0-0(只出现唯一一次),0-1,0-2,0-3,0-4,0-5,1-0循环
//                                        2.记录时序图数据,可辅助完成时序图
//                                        3.可以改变脉冲信号的周期(频率),设定数码管显示的时间间隔
//                                        4.直接改进实际试验1-5的错误输出,将Y延迟一个时钟周期输出
//本程序采用脉冲信号周期2s,提供36个脉冲信号得出实验结果
//程序可无限循环执行下去,用户需自行关闭程序
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>  //Sleep(Time)延时函数:头文件在windows.h中声明,参数Time无符号整型(最好)变量,单位为毫秒:60000=1min
#define   M     36    //设置时钟信号脉冲个数,以及循环个数: Right[M/6]  向右取整
#define   Time  2000  //设定时钟信号周期Time: ms
int main()
{
	int s,i=0,k=0,j=0,Y=0;
	int Q0[4]={0},Q1[4]={0},S0[4]={0},S1[4]={0},Q0N[4]={0},Q1N[4]={0};     //触发器初始化
	//上面6个数组分别用来存储:触发器输出端 原态非变量,原态原变量,原态非变量暂留,原态原变量暂留,次态非变量,次态原变量
	//输出初始化触发器状态,在数码管中显示,等待下一个状态输出
    
	int CLK_UtoD[M]={0};              //记录时钟脉冲信号作用次数
	int CLK_Q[3][M]={0};              //3个一位数组分别记录3个JK触发器在每次脉冲作用后的值
	int CLK_Y[M]={0};                 //记录进位

	//时钟信号循环作用开始
	for(k=0,i=0;i<M;i++)
	{
		//运行到此,表示时钟下跳沿到来
		CLK_UtoD[i]=1;

		//确定触发器状态原态
		for(j=1;j<4;j++)
		{
			S1[j]=Q1[j];                
			S0[j]=Q0[j];                //①               
		}
        
		//时钟信号下跳沿到来,JK触发器按照Q^=J*Q~+K~*Q进行状态改变
		//计算触发器次态,计算进位Y
		Q1N[1]=S0[1];                   //②
		Q1N[2]=S0[3]*S1[1]*S0[2]+S0[1]*S1[2];
		Q1N[3]=S1[2]*S1[1]*S0[3]+S0[1]*S1[3];
		Y=S1[3]*S1[1];
		
		//触发器次态和Y值转化为六进制数输出
		for(j=1;j<4;j++)
		{
			//次态原变量正常保存
			if(Q1N[j]==2)
			{
				Q1N[j]=1;
			}
            
			//次态非变量正常保存
			if(Q1N[j]==1)
			{
				Q0N[j]=0;                //③求非变量
			}
			if(Q1N[j]==0)
			{
				Q0N[j]=1;
			}

			Q1[j]=Q1N[j];
			Q0[j]=Q0N[j];
		}

		//记录时序图数据
		for(j=1;j<4;j++)
		{
			CLK_Q[j-1][k]=Q1[j];
		}
        CLK_Y[k]=Y;

        //将JK触发器输出端次态原变量值转化为十(六)进制数码管上显示
		s=4*Q1[3]+2*Q1[2]+1*Q1[1];      

		//模拟时钟信号,隔一段时间才有相应输出,也就是一个延时程序
		Sleep(Time);                    //每隔Time毫秒来一个CLK下跳沿

		k++;                            //用来判断一个循环0-5,一个循环结束后,回车换行显示
		printf("%d-%d  ",Y,s);
		if(k%12==0)
		{
			printf("\n");
		}
	}

	Sleep(3000);                         //停顿3秒再进行输出

	//输出时序图数据
	printf("\n\t\t************此次实验时序图数据如下************\n");

	//输出时钟脉冲信号
	printf("\t\t*******时钟脉冲信号下跳沿如下:\n\t\t\t");
	for(i=0;i<M;i++)
	{
		printf("%d_",CLK_UtoD[i]);
		if((i+1)%18==0)
		{
			printf("\n\t\t\t");
		}
	}
	printf("\n\t\t*******接收有效脉冲下跳沿(周期)个数: %4d\n",k);

    //输出进位值
	printf("*****进位值如下:\n\t\t\t");
	for(i=0;i<M;i++)
	{
		printf("%d_",CLK_Y[i]);
		if((i+1)%18==0)
		{
			printf("\n\t\t\t");
		}
	}
	printf("\n");

	//输出JK触发器输出端原变量值(符合齐头并进方式)
	for(i=0;i<3;i++)
	{
		printf("***JK触发器FF%d输出端原变量Q%d将变为:\n\t\t\t",i+1,i+1);
		for(j=0;j<k;j++)
		{
			printf("%d_",CLK_Q[i][j]);
			if((j+1)%18==0)
			{
				printf("\n\t\t\t");
			}
		}
		printf("\n");
	}	

	system("pause");
	system("cls");
	main();
	return 0;
}
